---
import { format } from 'fecha'
const { data } = Astro.props
import imageUrlBuilder from '@sanity/image-url'
import { sanityClient } from 'sanity:client'
import type { SanityImageSource } from '@sanity/image-url/lib/types/types'

function truncateString(str: string, num: number) {
  if (str.length > num) {
    return str.slice(0, num) + '...'
  } else {
    return str
  }
}

const builder = imageUrlBuilder(sanityClient)

function urlFor(source: SanityImageSource) {
  return builder.image(source)
}
---

<card
  id='card'
  onclick=`goToEvent('${data.slug.current}')`
  class='relative mt-2 h-64 w-full min-w-[320px] max-w-[410px] flex-1 cursor-pointer rounded-md p-6 shadow-md transition duration-200 hover:scale-[1.02] sm:min-w-[400px] md:min-w-[400px]'
>
  <element class='absolute left-1/2 top-0 z-0 w-full -translate-x-1/2'>
    <img class='w-full' src='/images/card_grid.svg' alt='card grid' />
  </element>
  <content class='relative z-[1] flex h-full flex-col gap-2'>
    <tag
      class='flex w-fit items-center gap-2 rounded-md bg-teal-400 px-2 py-2 text-sm font-medium'
    >
      <ion-icon name='calendar-outline' class='text-xl'></ion-icon>
      <span>{data && format(new Date(data.date), 'MMM D')}</span>
      <span>â€¢</span>
      <span>{data && truncateString(data.address, 25)}</span>
    </tag>
    <h1 class='text-2xl font-extrabold text-slate-800'>{data && data.title}</h1>
    <p class='text-sm font-light text-slate-800'>
      {data && truncateString(data.description, 150)}
    </p>
    <img
      class='h-16 w-full rounded-md object-cover object-bottom'
      src={data && urlFor(data.image)}
      alt={data && data.title}
    />
  </content>
</card>

<script is:inline>
  function goToEvent(id) {
    window.location.href = `/events/${id}`
  }
</script>
